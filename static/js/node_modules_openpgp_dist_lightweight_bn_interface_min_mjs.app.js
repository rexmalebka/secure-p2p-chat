/*! For license information please see node_modules_openpgp_dist_lightweight_bn_interface_min_mjs.app.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["node_modules_openpgp_dist_lightweight_bn_interface_min_mjs"],{"../node_modules/openpgp/dist/lightweight/bn.interface.min.mjs":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _bn_min_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bn.min.mjs */ "../node_modules/openpgp/dist/lightweight/bn.min.mjs");\n/* harmony import */ var _openpgp_min_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./openpgp.min.mjs */ "../node_modules/openpgp/dist/lightweight/openpgp.min.mjs");\n/*! OpenPGP.js v5.11.2 - 2024-06-19 - this is LGPL licensed code, see LICENSE/our website https://openpgpjs.org/ for more information. */\n"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;class t{constructor(t){if(void 0===t)throw Error("Invalid BigInteger input");this.value=new _bn_min_mjs__WEBPACK_IMPORTED_MODULE_0__["default"](t)}clone(){const e=new t(null);return this.value.copy(e.value),e}iinc(){return this.value.iadd(new _bn_min_mjs__WEBPACK_IMPORTED_MODULE_0__["default"](1)),this}inc(){return this.clone().iinc()}idec(){return this.value.isub(new _bn_min_mjs__WEBPACK_IMPORTED_MODULE_0__["default"](1)),this}dec(){return this.clone().idec()}iadd(e){return this.value.iadd(e.value),this}add(e){return this.clone().iadd(e)}isub(e){return this.value.isub(e.value),this}sub(e){return this.clone().isub(e)}imul(e){return this.value.imul(e.value),this}mul(e){return this.clone().imul(e)}imod(e){return this.value=this.value.umod(e.value),this}mod(e){return this.clone().imod(e)}modExp(t,i){const r=i.isEven()?_bn_min_mjs__WEBPACK_IMPORTED_MODULE_0__["default"].red(i.value):_bn_min_mjs__WEBPACK_IMPORTED_MODULE_0__["default"].mont(i.value),u=this.clone();return u.value=u.value.toRed(r).redPow(t.value).fromRed(),u}modInv(e){if(!this.gcd(e).isOne())throw Error("Inverse does not exist");return new t(this.value.invm(e.value))}gcd(e){return new t(this.value.gcd(e.value))}ileftShift(e){return this.value.ishln(e.value.toNumber()),this}leftShift(e){return this.clone().ileftShift(e)}irightShift(e){return this.value.ishrn(e.value.toNumber()),this}rightShift(e){return this.clone().irightShift(e)}equal(e){return this.value.eq(e.value)}lt(e){return this.value.lt(e.value)}lte(e){return this.value.lte(e.value)}gt(e){return this.value.gt(e.value)}gte(e){return this.value.gte(e.value)}isZero(){return this.value.isZero()}isOne(){return this.value.eq(new _bn_min_mjs__WEBPACK_IMPORTED_MODULE_0__["default"](1))}isNegative(){return this.value.isNeg()}isEven(){return this.value.isEven()}abs(){const e=this.clone();return e.value=e.value.abs(),e}toString(){return this.value.toString()}toNumber(){return this.value.toNumber()}getBit(e){return this.value.testn(e)?1:0}bitLength(){return this.value.bitLength()}byteLength(){return this.value.byteLength()}toUint8Array(e="be",t){return this.value.toArrayLike(Uint8Array,e,t)}}/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (t);\n//# sourceMappingURL=bn.interface.min.mjs.map\n\n\n//# sourceURL=webpack:///../node_modules/openpgp/dist/lightweight/bn.interface.min.mjs?')}}]);